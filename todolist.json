{
  "openapi" : "3.0.3",
  "info" : {
    "title": "Todolist Restful API",
    "version": "1",
    "description": "OpenAI for todolist Restful API",
    "termsOfService": "https://github.com/triatmojo",
    "contact": {
      "name": "Tri Atmojo",
      "email": "tatmojo17@gmail.com",
      "url": "https://github.com/triatmojo"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://{environment}.alamkoding.com/api/v1",
      "description": "Todolist  Restful API Servers",
      "variables": {
        "environment" : {
          "description": "Server Environment",
          "default": "dev",
          "enum": [
            "dev",
            "qa",
            "prod"
          ]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "Youtube Alamkoding",
    "url": "https://www.youtube.com/c/AlamKoding"
  },
  "paths": {
    "/todolist" : {
      "get": {
        "summary": "Get all todolist",
        "description": "Get all todolist by default",
        "parameters": [
          {
            "name": "include_done",
            "in": "query",
            "required": false,
            "description": "Is include todolist by default",
            "schema": {
              "type": "boolean",
              "nullable": true,
              "default": false
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter todolist by name",
            "schema": {
              "type": "string",
              "nullable": true,
              "minLength": 1,
              "maxLength": 100
            },
            "examples": {
              "golang" : {
                "description": "Example name Golang",
                "value": "GOLANG"
              },
              "php" : {
                "description": "Example name Php",
                "value": "PHP"
              }
            }
          }
        ],
        "responses": {

        }
      },
      "post": {
        "summary": "Create new todolist",
        "description": "Create new todolist to database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json" : {
              "schema": {
                "type": "object",
                "properties": {
                  "name" : {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority" : {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "default": 1
                  },
                  "tags": {
                    "type": "array",
                    "required": true,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "examples": {
                "golang" : {
                  "description": "Example create todolist Golang",
                  "value": {
                    "name" : "Golang",
                    "priority": 1,
                    "tags" : [
                      "Golang",
                      "Programming"
                    ]
                  }
                },
                "php" : {
                  "description": "Example create todolist PHP",
                  "value": {
                    "name" : "PHP",
                    "priority": 2,
                    "tags" : [
                      "PHP",
                      "Programming"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {

        }
      }
    },
    "/todolist/{todolistId}": {
      "put": {
        "summary": "Update existing todolist",
        "description": "Update todolist in database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "TodolistId for updated",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name" : {
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  },
                  "priority" : {
                    "type": "integer",
                    "format": "int32",
                    "required": true,
                    "default": 1
                  },
                  "tags" : {
                    "type": "array",
                    "required": true,
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "examples": {
                "golang" : {
                  "description": "Example update todolistId Golang",
                  "value": {
                    "name" : "Golang",
                    "priority": 1,
                    "tags" : [
                      "Golang",
                      "Programming"
                    ]
                  }
                },
                "php" : {
                  "description": "Example update todolistId PHP",
                  "value": {
                    "name" : "PHP",
                    "priority": 2,
                    "tags" : [
                      "PHP",
                      "Programming"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {

        }
      },
      "delete": {
        "summary": "Delete Existing todolist",
        "description": "Update todolist in database",
        "parameters": [
          {
            "name": "todolistId",
            "in": "path",
            "required": true,
            "description": "TodolistId for deleted",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            }
          }
        ],
        "responses": {

        }
      }
    }
  }
}